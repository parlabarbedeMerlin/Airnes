// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// this schema is the schema for the database fot our online store

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       Int     @id @default(autoincrement())
    email    String  @unique
    name     String?
    password String
    role     Role    @default(USER)
    cart     Cart?
    orders   Order[]
    status   Status  @default(ACTIVE)
}

model Product {
    id          Int         @id @default(autoincrement())
    name        String
    description String
    price       Float
    stock       Int         @default(-1)
    image       String
    status      Status      @default(ACTIVE)
    userId      Int
    categories  Category[]
    orderItems  OrderItem[]
}

model Category {
    id       Int       @id @default(autoincrement())
    name     String
    products Product[]
}

model Cart {
    id         Int         @id @default(autoincrement())
    User       User        @relation(fields: [userId], references: [id])
    userId     Int @unique
    orderItems OrderItem[]
}

model Order {
    id         Int         @id @default(autoincrement())
    User       User        @relation(fields: [userId], references: [id])
    userId     Int
    orderItems OrderItem[]
}

model OrderItem {
    id        Int     @id @default(autoincrement())
    quantity  Int
    price     Float
    Product   Product @relation(fields: [productId], references: [id])
    productId Int
    Cart      Cart?   @relation(fields: [cartId], references: [id])
    cartId    Int?
    Order     Order?  @relation(fields: [orderId], references: [id])
    orderId   Int?
}

model AccountDeleteRequest {
    id        Int     @id @default(autoincrement())
    email     String
    createdAt DateTime
}

enum Role {
    USER // default user
    DELIVERY // give an access to the order list with the address of the user
    SELLER // give an access to the product list (add, update, delete) and can see the number of orders for each product without the address of the user
    COMMUNICATION // can send a newsletter to all users
    ADMIN // all access orders, products, users, can use to send a newsletter...
}

enum Status {
    LIMITED
    ACTIVE
    OUT_OF_STOCK
    INACTIVE
}

//event
//delete AccountDeleteRequest after 1 month


